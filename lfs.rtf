{\rtf1 \ansi 
{\colortbl;
\red0\green0\blue0;
\red255\green255\blue255;
\red255\green0\blue0;
\red0\green255\blue0;
\red0\green0\blue255;
\red0\green255\blue255;
\red255\green0\blue255;
\red255\green255\blue0;
\red0\green0\blue128;
\red0\green128\blue128;
\red0\green128\blue0;
\red128\green0\blue128;
\red128\green0\blue0;
\red128\green128\blue0;
\red128\green128\blue128;
\red192\green192\blue192;
}
{\fonttbl; {
\f0 arial}{
\f1 symbol}{
\f2 times new roman}{
\f3 serif}{
\f4 sans-serif}{
\f5 monospace}
}
{\*\generator Apache XML Graphics RTF Library;}
\fet0 \ftnbj 
{\*\listtable
{\list\listtemplateid-723955400\listsimple{\listlevel\leveljc\levelfollow0\levelspace0\levelindent0\levelstartat1{\leveltext\'03\'00. ;}{\levelnumbers\'01;}\f0 }{\listname ;}\listid-1155484576}
{\list\listtemplateid-1690734402\listsimple{\listlevel\leveljc\levelfollow0\levelspace0\levelindent0\levelstartat1{\leveltext\'03\'00. ;}{\levelnumbers\'01;}\f0 }{\listname ;}\listid1033096058}
{\list\listtemplateid1327362106\listsimple{\listlevel\leveljc\levelfollow0\levelspace0\levelindent0\levelstartat1{\leveltext\'03\'00. ;}{\levelnumbers\'01;}\f0 }{\listname ;}\listid-1557280266}
{\list\listtemplateid502539523\listsimple{\listlevel\leveljc\levelfollow0\levelspace0\levelindent0\levelstartat1{\leveltext\'03\'00. ;}{\levelnumbers\'01;}\f0 }{\listname ;}\listid-1930858313}
{\list\listtemplateid-938301587\listsimple{\listlevel\leveljc\levelfollow0\levelspace0\levelindent0\levelstartat1{\leveltext\'03\'00. ;}{\levelnumbers\'01;}\f0 }{\listname ;}\listid-1728529858}
{\list\listtemplateid1085665355\listsimple{\listlevel\leveljc\levelfollow0\levelspace0\levelindent0\levelstartat1{\leveltext\'03\'00. ;}{\levelnumbers\'01;}\f0 }{\listname ;}\listid1431162155}
{\list\listtemplateid-1661998771\listsimple{\listlevel\leveljc\levelfollow0\levelspace0\levelindent0\levelstartat1{\leveltext\'03\'00. ;}{\levelnumbers\'01;}\f0 }{\listname ;}\listid1654374947}
}
{\*\listoverridetable
{\*\listoverride{\listid-1155484576\listoverridecount0\ls1}}
{\*\listoverride{\listid1033096058\listoverridecount0\ls2}}
{\*\listoverride{\listid-1557280266\listoverridecount0\ls3}}
{\*\listoverride{\listid-1930858313\listoverridecount0\ls4}}
{\*\listoverride{\listid-1728529858\listoverridecount0\ls5}}
{\*\listoverride{\listid1431162155\listoverridecount0\ls6}}
{\*\listoverride{\listid1654374947\listoverridecount0\ls7}}
}
\paperw11905 \paperh16837 \margt1440 \margb1440 \margl1440 \margr1440 \headery1296 \footery1296 
\sectd {\header 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \b0 \qj {
{\trowd \itap0 \trleft0 \trrh280 
\clbrdrt \clbrdrb \brdrs \brdrw10 \brdrcf1 \clbrdrl \ql \cellx2000 \ql 
\clbrdrt \clbrdrb \brdrs \brdrw10 \brdrcf1 \ql \cellx4000 \ql 
\clbrdrt \clbrdrb \brdrs \brdrw10 \brdrcf1 \clbrdrr \ql \cellx6000 \ql 
\intbl 
{\ri0 \i0 \ql \fs20 \cf1 \f3 \li-960 \b0 
{\ri0 \i0 \ql \fs20 \cf1 \f3 \li-960 \b0 
}
}\ql \intbl \cell \intbl 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \qc \b0 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \qc \b0 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Using The Linux Large File System (LFS)
\par 
}
}
}\ql \intbl \cell \intbl 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \qr \b0 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \qr \b0 
}
}\ql \intbl \cell \row }}
}}{\footer 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \b0 \qj {
{\trowd \itap0 \trleft0 \trrh280 
\clbrdrt \brdrs \brdrw10 \brdrcf1 \clbrdrb \clbrdrl \ql \cellx2000 \ql 
\clbrdrt \brdrs \brdrw10 \brdrcf1 \clbrdrb \ql \cellx4000 \ql 
\clbrdrt \brdrs \brdrw10 \brdrcf1 \clbrdrb \clbrdrr \ql \cellx6000 \ql 
\intbl 
{\ri0 \i0 \ql \fs20 \cf1 \f3 \li-960 \b0 
{\ri0 \i0 \ql \fs20 \cf1 \f3 \li-960 \b0 
}
}\ql \intbl \cell \intbl 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \qc \b0 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \qc \b0 
{\b0 \i0 \fs20 \f3 \chpgn }
\par 
}
}\ql \intbl \cell \intbl 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \qr \b0 
{\ri0 \i0 \fs20 \cf1 \f3 \li-960 \qr \b0 
}
}\ql \intbl \cell \row }}
}}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart id2570622}{\*\bkmkend id2570622}
\par 
{\ri0 \i0 \fs20 \cf1 \f4 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li0 \qc \b0 
{\ri0 \i0 \fs49 \cf1 \f4 \li0 \qc \b1 
{\ri0 \i0 \fs49 \cf1 \f4 \li0 \qc \b1 
{\i0 \fs49 \sa0 \cf1 \f4 \b1 \sb200 
Using The Linux Large File System (LFS)
\par 
}
}
}
{\ri0 \i0 \fs28 \cf1 \f4 \li0 \qc \b0 
{\ri0 \i0 \fs28 \cf1 \f4 \li0 \qc \b0 
{\i0 \fs28 \sa0 \cf1 \f4 \b0 \sb144 
Tommy Reynolds
\par 
}
}
}
}
{\ri0 \i0 \fs20 \cf1 \f4 \li0 \b0 \qj 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart toc___id2570622}{\*\bkmkend toc___id2570622}
\par 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs34 \cf1 \f4 \li-960 \b1 \qj 
{\i0 \fs34 \sa172 \cf1 \f4 \b1 \sb718 
Table of Contents
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
}
}
{\ri480 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\field {\*\fldinst HYPERLINK "#sn-intro" }{\fldrslt 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Introduction
}}}
}
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\field {\*\fldinst HYPERLINK "#sn-intro" }{\fldrslt }}
\par 
}
}
{\ri480 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\field {\*\fldinst HYPERLINK "#sn-offsets" }{\fldrslt 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
File Offsets And The off_t Type
}}}
}
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\field {\*\fldinst HYPERLINK "#sn-offsets" }{\fldrslt }}
\par 
}
}
{\ri480 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\field {\*\fldinst HYPERLINK "#en-io_model" }{\fldrslt 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
File I/O Model
}}}
}
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\field {\*\fldinst HYPERLINK "#en-io_model" }{\fldrslt }}
\par 
}
}
{\ri480 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\field {\*\fldinst HYPERLINK "#sn-compilation" }{\fldrslt 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Compiling Programs To Use LFS
}}}
}
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\field {\*\fldinst HYPERLINK "#sn-compilation" }{\fldrslt }}
\par 
}
}
{\ri480 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\field {\*\fldinst HYPERLINK "#sn-summary" }{\fldrslt 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Summary
}}}
}
{\i0 \fs20 \cf1 \f3 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\i0 \fs20 \sa200 \cf1 \f3 \b0 \sb0 
 
}
{\field {\*\fldinst HYPERLINK "#sn-summary" }{\fldrslt }}
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart sn-intro}{\*\bkmkend sn-intro}
\par 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b1 \qj 
{\ri0 \i0 \fs41 \cf1 \f4 \li-960 \b1 \qj 
{\i0 \fs41 \sa0 \cf1 \f4 \b1 \sb200 
Introduction
\par 
}
}
}
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Historically, the maximum size of a Linux file has been 2GB (when an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
off_t
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 was a signed 32-bit item) and then 4GB (when the 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
off_t
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 was promoted to an unsigned 32-bit item).
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
To nobody\rquote s real surprise, programmers usually just used a simple 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
int
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 to hold file sizes and offsets. After all, typing 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
int
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 is part of a C programmer\rquote s DNA.
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Quickly, Moore\rquote s Law kicked in and the available disk space exploded. Today personal systems with 200GB are common. (How big is 
}
{\i1 \fs20 \cf1 \f3 \b0 \sb0 
{\i1 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
your
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 IPOD?)
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Linux moved into the server realm where terabyte files are common and 32-bits were just not big enough. Having 64-bit file sizes seemed a reasonable step. Unfortunately, an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
int
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 is usually either a 16-bit or 32-bit quantity and only occasionally a 64-bit item. Many programs written by lazy programmers simply broke.
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
What follows is a method which currently works correctly and also insulates the programmer from future concerns if file size limitations increase in the future.
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart sn-offsets}{\*\bkmkend sn-offsets}
\par 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b1 \qj 
{\ri0 \i0 \fs41 \cf1 \f4 \li-960 \b1 \qj 
{\i0 \fs41 \sa0 \cf1 \f4 \b1 \sb200 
File Offsets And The off_t Type
\par 
}
}
}
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
File sizes, and the logical I/O point within that file, may only be legally held by an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
off_t
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 container. Not an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
int
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
, not an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
unsigned long
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
, nor even a 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
unsigned long long
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
, but an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
off_t
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 type.
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
Support for these larger file sizes has been incrementally added to the GNU glibc runtime library. Available documentation sources, such as Google.com, can offer contradictory, stale information about this topic. This document represents the current state of the art.
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
The GNU GCC compiler collection presents a correctly-sized 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
off_t
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 for its compilation environment. To avoid breaking \ldblquote working\rdblquote  legacy code, gcc usually defaults 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
off_t
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 to match the size of an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
int
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
, which is often sized to match the natural word size of the local machine.
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Linux has offered a 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
O_LARGEFILE
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 flag to be OR\rquote ed into other flags of the 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
open(2)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 system call, plus 64-bit versions of 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
open(2)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
, 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
lseek(2)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
, 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
stat(2)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 and others. This was a temporary work-around which has now be superceeded by integral GCC support.
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
A correctly-written program must now 
}
{\i1 \fs20 \cf1 \f3 \b0 \sb0 
{\i1 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
never
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 reference the 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
O_LARGEFILE
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 flag. As we shall present below, there is a preferred solution which also does not break legacy code.
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart en-io_model}{\*\bkmkend en-io_model}
\par 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b1 \qj 
{\ri0 \i0 \fs41 \cf1 \f4 \li-960 \b1 \qj 
{\i0 \fs41 \sa0 \cf1 \f4 \b1 \sb200 
File I/O Model
\par 
}
}
}
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart ex-io_model}{\*\bkmkend ex-io_model}
\par 
{\ri0 \i0 \fs24 \cf1 \f3 \li0 \b1 \qj 
{\i0 \fs24 \sa144 \cf1 \f3 \b1 \sb440 
Example\u160\'3f1.\u160\'3fFile I/O Technique
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
Below is an illustration of the classical UNIX I/O model. It works unchanged either with either standard or LFS environments.
\par 
}
}
{\ri0 \i0 \ql \fs20 \cf1 \f5 \li0 \b0 
{\i0 \fs20 \sa400 \cf1 \f5 \b0 \sb200 
\line #include <sys/types.h>\line #include <sys/stat.h>\line #include <fcntl.h>\line \line int fd;\line off_t pos;\line char c;\line \line fd = open( \ldblquote /etc/passwd\rdblquote , O_RDONLY );\line pos = 500;\line lseek( fd, pos, SEEK_SET );\line read( fd, &ch, 1 );\line       
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
There are no source code changes whether or not LFS is used.
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart sn-compilation}{\*\bkmkend sn-compilation}
\par 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b1 \qj 
{\ri0 \i0 \fs41 \cf1 \f4 \li-960 \b1 \qj 
{\i0 \fs41 \sa0 \cf1 \f4 \b1 \sb200 
Compiling Programs To Use LFS
\par 
}
}
}
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
Earlier GCC implementations required special preprocessor symbols be provided before the first system include file was referenced. Rather than begin code surgery, these definitions were commonly placed on the compiler command line, but this practice was awkward and difficult to maintain portably. Although that technique is still valid, but for how long we do not know, it is deprecated. A preferred alternative exists.
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
The compiler magic to use LFS is accessed using the POSIX getconf tool:
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart ex-getconf}{\*\bkmkend ex-getconf}
\par 
{\ri0 \i0 \fs24 \cf1 \f3 \li0 \b1 \qj 
{\i0 \fs24 \sa144 \cf1 \f3 \b1 \sb440 
Example\u160\'3f2.\u160\'3fUsing getconf(P) For LFS Configuration
\par 
}
}
{\ri0 \i0 \ql \fs20 \cf1 \f5 \li0 \b0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
\line 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
$ 
}
}
{\i0 \fs20 \cf1 \f5 \b1 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b1 \sb0 
getconf LFS_CFLAGS
}
}
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
\line 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
}
}
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
\line 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
$ 
}
}
{\i0 \fs20 \cf1 \f5 \b1 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b1 \sb0 
getconf LFS_LDFLAGS
}
}
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
\line 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
$ 
}
}
{\i0 \fs20 \sa400 \cf1 \f5 \b0 \sb200 
\line         
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
So, to make a portable 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
make(1)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
Makefile
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
, simply add this phrase to the 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
CFLAGS
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 and 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
LDFLAGS
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 macros:
\par 
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart ex-makefile}{\*\bkmkend ex-makefile}
\par 
{\ri0 \i0 \fs24 \cf1 \f3 \li0 \b1 \qj 
{\i0 \fs24 \sa144 \cf1 \f3 \b1 \sb440 
Example\u160\'3f3.\u160\'3fMakefile
\par 
}
}
{\ri0 \i0 \ql \fs20 \cf1 \f5 \li0 \b0 
{\i0 \fs20 \sa400 \cf1 \f5 \b0 \sb200 
\line CFLAGS  += `getconf LFS_CFLAGS`\line LDFLAGS += `getconf LFS_LDFLAGS`\line         
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
With these preprocessor definitions supplied on the gcc command line, the glibc library transparently changes the definition of 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
off_t
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 to hold more than 31 bits worth of data. The wicked 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
O_LARGEFILE
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 flag is also transparently added to the 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
open(2)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 or 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
creat(2)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb200 
 system calls.
\par 
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\*\bkmkstart sn-summary}{\*\bkmkend sn-summary}
\par 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b0 \qj 
{\ri0 \i0 \fs20 \cf1 \f4 \li-960 \b1 \qj 
{\ri0 \i0 \fs41 \cf1 \f4 \li-960 \b1 \qj 
{\i0 \fs41 \sa0 \cf1 \f4 \b1 \sb200 
Summary
\par 
}
}
}
}
}
}
{\ri0 \i0 \fs20 \cf1 \f3 \li0 \b0 \qj 
}
}\pard \fi-360 \li {\*\pn \pnlvlbody \ilvl0 \ls0 \pndec \pnstart1 \pnindent \pntxta. }\ls1 {\pntext \f1 \'b7 \tab }
{\ri0 \i0 \fs20 \cf1 \f3 \li400 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Do use the 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
off_t
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 to hold file sizes and file positions.
\par {\pntext \f1 \'b7 \tab }
}
}\pard \pard \fi-360 \li {\*\pn \pnlvlbody \ilvl0 \ls0 \pndec \pnstart1 \pnindent \pntxta. }\ls2 {\pntext \f1 \'b7 \tab }
{\ri0 \i0 \fs20 \cf1 \f3 \li400 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Do not use anything else, such as an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
unsigned long long int
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 to hold a file size or file position.
\par {\pntext \f1 \'b7 \tab }
}
}\pard \pard \fi-360 \li {\*\pn \pnlvlbody \ilvl0 \ls0 \pndec \pnstart1 \pnindent \pntxta. }\ls3 {\pntext \f1 \'b7 \tab }
{\ri0 \i0 \fs20 \cf1 \f3 \li400 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Do print file sizes and positions using the 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
%llu
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 format specifier. Do cast the corresponding 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
prinf(3)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 argument specifier into an 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
(unsigned long long)
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 type.
\par {\pntext \f1 \'b7 \tab }
}
}\pard \pard \fi-360 \li {\*\pn \pnlvlbody \ilvl0 \ls0 \pndec \pnstart1 \pnindent \pntxta. }\ls4 {\pntext \f1 \'b7 \tab }
{\ri0 \i0 \fs20 \cf1 \f3 \li400 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Never directly reference 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
O_LARGEFILE
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 in a program.
\par {\pntext \f1 \'b7 \tab }
}
}\pard \pard \fi-360 \li {\*\pn \pnlvlbody \ilvl0 \ls0 \pndec \pnstart1 \pnindent \pntxta. }\ls5 {\pntext \f1 \'b7 \tab }
{\ri0 \i0 \fs20 \cf1 \f3 \li400 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Do add 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
`getconf LFS_CFLAGS`
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 to the compilation flags. If your make(1) does not support this, run the command manually to see the appropriate flags.
\par {\pntext \f1 \'b7 \tab }
}
}\pard \pard \fi-360 \li {\*\pn \pnlvlbody \ilvl0 \ls0 \pndec \pnstart1 \pnindent \pntxta. }\ls6 {\pntext \f1 \'b7 \tab }
{\ri0 \i0 \fs20 \cf1 \f3 \li400 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Do add 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
`getconf LFS_LDFLAGS`
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 to the linker flags. If your make(1) does not support this, run the command manually to see the appropriate flags.
\par {\pntext \f1 \'b7 \tab }
}
}\pard \pard \fi-360 \li {\*\pn \pnlvlbody \ilvl0 \ls0 \pndec \pnstart1 \pnindent \pntxta. }\ls7 {\pntext \f1 \'b7 \tab }
{\ri0 \i0 \fs20 \cf1 \f3 \li400 \b0 \qj 
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
Do not define 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
_LARGEFILE_SOURCE
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
, 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
_LARGEFILE64_SOURCE
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
, or 
}
{\i0 \fs20 \cf1 \f5 \b0 \sb0 
{\i0 \fs20 \sa0 \cf1 \f5 \b0 \sb0 
_FILE_OFFSET_BITS=n
}
}
{\i0 \fs20 \sa0 \cf1 \f3 \b0 \sb0 
 in your source code. These should be set via the compiler command line.
\par {\pntext \f1 \'b7 \tab }
}
}\pard 
}\sect }